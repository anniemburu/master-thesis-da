 Panda Version: 2.0.3
Namespace(batch_size=128, cat_dims=None, cat_idx=None, config='config/diamonds.yml', data_parallel=False, dataset='Diamonds', direction='minimize', dropna_idx=None, early_stopping_rounds=20, epochs=100, gpu_ids=[0, 1], logging_period=100, miss_cat_idx=None, miss_num_idx=None, model_name='TabTransformer', n_trials=8, nominal_idx=None, num_classes=1, num_features=9, num_idx=None, num_splits=5, objective='regression', one_hot_encode=False, optimize_hyperparameters=True, ordinal_encode=True, ordinal_idx=[1, 2, 3], scale=True, seed=221, shuffle=True, target_encode=False, use_gpu=True, val_batch_size=256)
Start hyperparameter optimization
 Panda Version: 2.0.3
Loading dataset Diamonds...
Dataset loaded! 

X b4 encoding : [0.23 'Ideal' 'E' 'SI2' 61.5 55.0 3.95 3.98 2.43] 

(53940, 9)
Data Type of X: <class 'numpy.ndarray'>
Nominal Idx: None
Ordinal Idx: [1, 2, 3]
Cat Dims: None 
 

Normonal Idx: None
Cat Idx Part II: [1, 2, 3] 
ENDE 
 

X after Nominal Encoding: [0.23 'Ideal' 'E' 'SI2' 61.5 55.0 3.95 3.98 2.43] 
 

Scaling the data...
X after Scaling: [-1.1981678055010725 'Ideal' 'E' 'SI2' -0.1740915083097858
 -1.0996719906799668 -1.5878374489219242 -1.5361955629431636
 -1.5711291873012518] 
 

Using an existing study with name 'TabTransformer_Diamonds' instead of creating a new one.
In get_device
[6, 8, 9]
On Device: cuda
Using dim 256 and batch size 128
On Device: cuda
In get_device
[6, 8, 9]
On Device: cuda
Using dim 256 and batch size 128
On Device: cuda
Epoch 0: Val Loss 14345206.00000
Trial 15 failed with parameters: {'dim': 256, 'depth': 6, 'heads': 8, 'weight_decay': -4, 'learning_rate': -3, 'dropout': 0.3} because of the following error: OutOfMemoryError('CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacty of 7.79 GiB of which 18.44 MiB is free. Including non-PyTorch memory, this process has 7.77 GiB memory in use. Of the allocated memory 7.05 GiB is allocated by PyTorch, and 594.89 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF').
Traceback (most recent call last):
  File "/home/mburu/.local/lib/python3.8/site-packages/optuna/study/_optimize.py", line 197, in _run_trial
    value_or_values = func(trial)
  File "train.py", line 134, in __call__
    sc, time = cross_validation(model, self.X, self.y, self.args, visual=False)
  File "train.py", line 46, in cross_validation
    loss_history, val_loss_history = curr_model.fit(X_train, y_train, X_test, y_test)  # X_val, y_val)
  File "/home/mburu/Master_Thesis/master-thesis-da/DNN_Trial/models/tabtransformer.py", line 126, in fit
    out = self.model(x_categ, x_cont)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mburu/Master_Thesis/master-thesis-da/DNN_Trial/models/tabtransformer.py", line 465, in forward
    x = self.transformer(x_categ)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mburu/Master_Thesis/master-thesis-da/DNN_Trial/models/tabtransformer.py", line 352, in forward
    x = ff(x)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mburu/Master_Thesis/master-thesis-da/DNN_Trial/models/tabtransformer.py", line 266, in forward
    return self.fn(x, **kwargs) + x
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mburu/Master_Thesis/master-thesis-da/DNN_Trial/models/tabtransformer.py", line 276, in forward
    return self.fn(self.norm(x), **kwargs)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mburu/Master_Thesis/master-thesis-da/DNN_Trial/models/tabtransformer.py", line 298, in forward
    return self.net(x)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/container.py", line 215, in forward
    input = module(input)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/modules/dropout.py", line 58, in forward
    return F.dropout(input, self.p, self.training, self.inplace)
  File "/home/mburu/miniconda3/envs/TabSurvey2/lib/python3.8/site-packages/torch/nn/functional.py", line 1266, in dropout
    return _VF.dropout_(input, p, training) if inplace else _VF.dropout(input, p, training)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacty of 7.79 GiB of which 18.44 MiB is free. Including non-PyTorch memory, this process has 7.77 GiB memory in use. Of the allocated memory 7.05 GiB is allocated by PyTorch, and 594.89 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
Trial 15 failed with value None.
